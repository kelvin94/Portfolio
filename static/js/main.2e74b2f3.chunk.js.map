{"version":3,"sources":["components/FrontEndMessageBox.js","components/BackEndMessageBox.js","components/ResponseBox.js","components/Header.js","components/ProductInfoBox.js","components/ListContainer.js","components/BuyBox.js","components/WindowContainer.js","index.js"],"names":["FrontEndMessageBox","props","useState","message","Alert","variant","onClose","setFrontEndMessage","dismissible","Heading","BackEndMessageBox","state","setBackEndMessage","ResponseBox","frontEndMessage","backEndMessage","Header","ProductInfoBox","Card","Body","Title","product","title","Text","price","seckill_price","stockCount","ListContainer","styled","div","offers","map","key","seckillSwagId","BuyBox","dummyPhoneNumber","setDummyPhoneNumber","copySuccess","setCopySuccess","textAreaRef","useRef","Row","Col","className","InputGroup","FormControl","placeholder","aria-label","aria-describedby","value","ref","Append","Button","onClick","event","preventDefault","Math","floor","pow","length","random","generateDummyNum","document","queryCommandSupported","e","current","select","execCommand","target","focus","Form","Group","controlId","Label","Control","as","onChange","setSelectedProduct","swagId","url","axios","get","then","response","console","log","data","setMd5HashedUrl","md5Url","setDealPrice","updateSelectedProductUrlHash","type","setPhoneNumber","handleBuy","WindowContainer","setOffers","frontEndCheckMessage","setFrontEndCheckMessage","selectedProduct","md5HashedUrl","dealPrice","phoneNumber","getProducts","useEffect","Container","xs","md","swag","userPhone","parseInt","post","headers","error","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2e74b2f3.chunk.js","sourcesContent":["import React from \"react\"\nimport Alert from 'react-bootstrap/Alert'\nimport Button from 'react-bootstrap/Button'\nimport  { useState, useEffect } from 'react';\n\nconst FrontEndMessageBox = (props) => {\n  const [show, setShow] = useState(true);\n\n\n    return ( \n        <div>\n            \n            {\n                ( props.message) ? (\n                    <Alert variant=\"danger\" onClose={() => props.setFrontEndMessage('')} dismissible>\n                    <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\n                    <p>\n                    {props.message}\n                    </p>\n                </Alert>\n                ) : ('')\n            }\n            {/* <Button onClick={() => setShow(true)}>Show Alert</Button> */}\n        </div>\n     );\n}\n \nexport default FrontEndMessageBox;","import React from \"react\"\nimport Alert from 'react-bootstrap/Alert'\nimport Button from 'react-bootstrap/Button'\nimport  { useState, useEffect } from 'react';\n\nconst BackEndMessageBox = (props) => {\n  const [show, setShow] = useState(true);\n\n    if(props.message) {\n        if(props.message.state == 0) {\n            return ( \n                <div>\n                    \n                    \n                        \n                            <Alert variant=\"danger\" onClose={() => props.setBackEndMessage({state: null, message: ''})} dismissible>\n                            <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\n                            <p>\n                                {props.message.message}\n                            </p>\n                        </Alert>\n                        \n                    \n                    {/* <Button onClick={() => setShow(true)}>Show Alert</Button> */}\n                </div>\n             );\n        } else if(props.message.state == 1) {\n            return ( \n                <div>\n                    \n                    \n                        \n                            <Alert variant=\"success\" onClose={() => props.setBackEndMessage({state: null, message: ''})} dismissible>\n                            <Alert.Heading>Oh snap! You got an success msg!</Alert.Heading>\n                            <p>\n                                {props.message.message}\n                            </p>\n                        </Alert>\n                        \n                    \n                    {/* <Button onClick={() => setShow(true)}>Show Alert</Button> */}\n                </div>\n             );\n        }\n    } else {\n        return (\n            <div></div>\n        )\n    }\n    return null;\n    \n}\n \nexport default BackEndMessageBox;","import React from \"react\"\nimport Alert from 'react-bootstrap/Alert'\nimport Button from 'react-bootstrap/Button'\nimport  { useState, useEffect } from 'react';\nimport FrontEndMessageBox from './FrontEndMessageBox'\nimport BackEndMessageBox from './BackEndMessageBox'\nconst ResponseBox = (props) => {\n    \n    return ( \n        <div>\n                <h5>Response msg from front end and back end</h5>\n                <p>Note-1: You can't repeatedly buy same product with same phone number, the request will not hit the db, caching service will catch you repeatedly buy and return response asap.</p>\n                <p>Note-2: If purchase is successful, lefthand side product list's stock count will be updated.</p>\n                {\n                    props.frontEndMessage? (\n                        <FrontEndMessageBox message={props.frontEndMessage} setFrontEndMessage={props.setFrontEndMessage}/>\n                    ) : ('')\n                }\n                {\n                    props.backEndMessage? (\n                        <BackEndMessageBox message={props.backEndMessage} setBackEndMessage={props.setBackEndMessage}/>\n                    ) : ('')\n                }\n\n                \n        </div>\n     );\n}\n\nexport default ResponseBox","import React from \"react\"\n\nconst Header = () => {\n  return (\n    <header>\n      <h1>Kelvin</h1>      \n    </header>\n  )\n}\n\nexport default Header","import React from \"react\"\nimport ResponseBox from \"./ResponseBox\"\nimport ExportURLBox from \"./ExportURLBox\"\nimport axios from \"axios\";\nimport Card from 'react-bootstrap/Card'\nconst ProductInfoBox = (props) => {\n    return ( \n        <div>\n            <Card>\n                <Card.Body>\n                    <Card.Title>Product: {props.product.title}</Card.Title>\n                    <Card.Text>\n                        <p>MSRP: {props.product.price}</p>\n                        <p>Discounted price: {props.product.seckill_price}</p>\n                        <p>Current stock count: {props.product.stockCount}</p>\n                    </Card.Text>\n                    \n                </Card.Body>\n                </Card>\n            \n                    \n        </div>\n    );\n}\n \nexport default ProductInfoBox;\n// class InputBox extends React.Component {\n//     // state = {        \n//     //     phoneNumber: 0,\n//     //     seckillSwagId: 0,\n//     //     md5Url: \"\",\n//     //     dealPrice: 0,\n//     //     responseMessage: \"\"\n//     // };\n    \n//     // onChange = e => {\n//     //     this.setState({\n//     //         [e.target.name]: e.target.value\n//     //     });\n//     // };\n\n//     // handleSubmit = e => {\n//     //     e.preventDefault();\n//     //     const headers = {\n//     //         'Content-Type': 'application/json'\n//     //       }\n//     //     //   {\"timestamp\":\"2020-07-26T17:23:30.412+0000\",\"status\":400,\"error\":\"Bad Request\",\"errors\":[{\"codes\":[\"NotNull.seckillParameter.userPhone\",\"NotNull.userPhone\",\"NotNull.java.lang.Long\",\"NotNull\"],\"arguments\":[{\"codes\":[\"seckillParameter.userPhone\",\"userPhone\"],\"arguments\":null,\"defaultMessage\":\"userPhone\",\"code\":\"userPhone\"}],\"defaultMessage\":\"phone num cannot be null\",\"objectName\":\"seckillParameter\",\"field\":\"userPhone\",\"rejectedValue\":null,\"bindingFailure\":false,\"code\":\"NotNull\"},{\"codes\":[\"NotNull.seckillParameter.md5Url\",\"NotNull.md5Url\",\"NotNull.java.lang.String\",\"NotNull\"],\"arguments\":[{\"codes\":[\"seckillParameter.md5Url\",\"md5Url\"],\"arguments\":null,\"defaultMessage\":\"md5Url\",\"code\":\"md5Url\"}],\"defaultMessage\":\"url cannot be null\",\"objectName\":\"seckillParameter\",\"field\":\"md5Url\",\"rejectedValue\":null,\"bindingFailure\":false,\"code\":\"NotNull\"}],\"message\":\"Validation failed for object='seckillParameter'. Error count: 2\",\"path\":\"/swag\"}\n//     //     let swag = {\n//     //         seckillSwagId: this.state.seckillSwagId,\n//     //         dealPrice: this.state.dealPrice,\n//     //         userPhone: parseInt(this.state.phoneNumber),\n//     //         md5Url: this.state.md5Url\n//     //     };\n    \n//     //     axios.post(`http://disseckill.jyl69.xyz:8080/swag`,  swag , {\n//     //         headers: headers\n//     //     })\n//     //     .then((response) => {\n//     //         console.log(response.data);\n//     //         if(response.data.state == 1) {\n//     //             this.setState({\n//     //                 responseMessage: \"Purchase success\"\n//     //             });\n//     //         }\n            \n//     //       }, (error) => {\n//     //         console.log(\"in error\");\n//     //         console.log(error.response.data);\n            \n//     //         console.log(error.response.data.message);\n//     //         this.setState({\n//     //             responseMessage: error.response.data.message\n//     //         });\n//     //       });\n//     // };\n\n//     // exportURL = e => {\n//     //     e.preventDefault();\n//     //     const url = `http://disseckill.jyl69.xyz:8080/export/url/${this.props.offer.seckillSwagId}`\n//     //     axios.get(url)\n//     //       .then(response => {\n//     //           console.log(response.data);\n//     //         // this.props.handleChangeProps(response.data.seckillSwagId, response.data.stockCount);\n//     //         this.props.updateMd5URLMapProps(response.data.seckillSwagId, response.data.md5Url, response.data.stockCount);\n//     //         this.setState({\n//     //                 seckillSwagId: response.data.seckillSwagId,\n//     //                 md5Url: response.data.md5Url,\n//     //                 dealPrice: response.data.seckill_price\n//     //         });\n\n//     //       });\n//     // }\n    \n//     render() {\n//         return (\n            \n\n//         )\n//     }\n// }\n\n// export default InputBox","import React from \"react\"\nimport ResponseBox from \"./ResponseBox\"\nimport  styled  from '@emotion/styled';\n\nimport ProductInfoBox from \"./ProductInfoBox\"\nconst ListContainer = (props) => {\n    const ListContainer = styled.div`\n        margin: 0 auto;\n        align-items: center;\n        \n        /* display: flex;\n        flex-direction: column;\n        justify-content: space-around; */\n        border-radius: 15px;\n    `\n    return ( \n        <ListContainer >\n                \n                {props.offers.map(product => (\n                    \n                    <ProductInfoBox \n                        key={product.seckillSwagId}\n                        product={product} \n                        // handleChangeProps={this.props.handleChangeProps}\n                        // updateMd5URLMapProps={this.props.updateMd5URLMapProps} \n\n                    />\n                ))}\n                \n\n        </ListContainer>\n     );\n}\n \nexport default ListContainer;","import React from \"react\"\nimport Form from 'react-bootstrap/Form'\nimport {FormControl, FormGroup, ControlLabel, HelpBlock, Checkbox, Radio, Button} from 'react-bootstrap';\nimport { Col, Row } from \"react-bootstrap\";\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport { useRef, useState } from 'react'\nimport axios from \"axios\";\n\nconst BuyBox = (props) => {\n    const [dummyPhoneNumber, setDummyPhoneNumber] = useState('')\n    const [copySuccess, setCopySuccess] = useState(null)\n    const textAreaRef = useRef(null);\n\n    const updateSelectedProductUrlHash = (swagId) => {\n        const url = `https://disseckill.jyl69.xyz:8080/export/url/${swagId}`\n        axios.get(url)\n          .then(response => {\n            console.log(response.data);\n            props.setMd5HashedUrl(response.data.md5Url)\n            props.setDealPrice(response.data.seckill_price)\n\n          });\n    }\n\n    function copyToClipboard(e) {\n        textAreaRef.current.select();\n        document.execCommand('copy');\n        // This is just personal preference.\n        // I prefer to not show the the whole text area selected.\n        e.target.focus();\n        setCopySuccess('Copied!');\n    };\n\n    const generateDummyNum = (event) => {\n        event.preventDefault();\n        let length = 9;\n        setDummyPhoneNumber(`${Math.floor(Math.pow(10, length-1) + Math.random() * 9 * Math.pow(10, length-1))}`)\n    }\n\n    return ( \n        <div>\n            \n            <Row>\n                <Col className=\"mb-12\">\n                    \n                    <InputGroup className=\"mb-12\">\n                        <FormControl\n                            placeholder=\"Generate phone number\"\n                            aria-label=\"Generate phone number\"\n                            aria-describedby=\"basic-addon2\"\n                            value={dummyPhoneNumber}\n                            ref={textAreaRef}\n                        />\n                        <InputGroup.Append>\n                            <Button variant=\"outline-secondary\" onClick={(event) => generateDummyNum(event)}>Generate</Button>\n                            \n                        </InputGroup.Append>\n                    </InputGroup>\n                    <InputGroup className=\"mb-12\">\n                        {\n                            /* Logical shortcut for only displaying the \n                                button if the copy command exists */\n                                document.queryCommandSupported('copy') &&\n                                    <div>\n                                    <Button variant=\"outline-secondary\" onClick={copyToClipboard}>Copy Generated PhoneNumber</Button> \n                                    {copySuccess}\n                                    </div>\n                            }\n                    </InputGroup>\n                </Col>\n            </Row>\n            <Row>\n                <Col className=\"mb-12\">\n                    <Form>                \n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                            <Form.Label>select a product</Form.Label>\n                            <Form.Control as=\"select\" \n                            \n                                onChange={(e) => {\n                                    props.setSelectedProduct( e.target.value )\n                                    updateSelectedProductUrlHash(e.target.value)\n                            }}> \n                                <option value=''></option>\n                                {props.offers.map(product => (\n                                    <option key={product.seckillSwagId} value={product.seckillSwagId}>Product ID: {product.seckillSwagId}, {product.title}</option>\n                                ))}\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId=\"formPhoneNumber\">\n                            <Form.Label>phone number</Form.Label>\n                            <Form.Control type=\"number\" placeholder=\"Enter phone number\" onChange={(e) => {\n                                props.setPhoneNumber( e.target.value )\n                                }}/> \n                            \n                            <Form.Text className=\"text-muted\">\n                            Pls use the randomly generated number above for testing.\n                            </Form.Text>\n                        </Form.Group>\n                        <Button variant=\"primary\" onClick={event => props.handleBuy(event)}>Buy</Button>\n\n                    </Form>\n\n                </Col>\n            </Row>\n        </div>\n     );\n}\n \nexport default BuyBox;","import React, { useState, useEffect } from 'react';\nimport { Col, Row, Form,Container } from \"react-bootstrap\";\n\n\nimport ResponseBox from \"./ResponseBox\"\nimport Header from \"./Header\"\nimport ListContainer from \"./ListContainer\"\nimport BuyBox from \"./BuyBox\"\nimport axios from \"axios\";\n\nconst WindowContainer = (props) => {\n    const [offers, setOffers] = useState([]);\n    const [frontEndCheckMessage, setFrontEndCheckMessage] = useState('');\n    const [backEndMessage, setBackEndMessage] = useState({\n        state: null, // 0 - error, 1-success\n        message: ''\n    });\n    const [selectedProduct, setSelectedProduct] = useState('')\n    const [md5HashedUrl, setMd5HashedUrl] = useState('')\n    const [dealPrice, setDealPrice] = useState('')\n    const [phoneNumber, setPhoneNumber] = useState('')\n\n    const getProducts = () => {\n        axios.get(\"https://disseckill.jyl69.xyz:8080/swag\")\n          .then(response => {\n              console.log(response.data)\n            setOffers(\n               response.data\n            )\n          });\n    }\n\n    const handleBuy = (event) => {\n        event.preventDefault();\n        console.log(event.target.value)\n        console.log('selectedProduct '+selectedProduct)\n        if(!phoneNumber) {\n            setFrontEndCheckMessage('PhoneNumber cannot be empty')\n            return\n        } \n        if(!selectedProduct) {\n            setFrontEndCheckMessage('Selected product cannot be empty')\n            return\n        } \n        if(!dealPrice || !md5HashedUrl) {\n            setFrontEndCheckMessage('Order API not generating MD5 hashed URL.')\n            return\n        }\n\n        const headers = {\n            'Content-Type': 'application/json'\n          }\n        \n        let swag = {\n            seckillSwagId: selectedProduct,\n            dealPrice: dealPrice,\n            userPhone: parseInt(phoneNumber),\n            md5Url: md5HashedUrl\n        };\n    \n        axios.post(`https://disseckill.jyl69.xyz:8080/swag`,  swag , {\n            headers: headers\n        })\n        .then((response) => {\n            console.log(response.data);\n            if(response.data.state == 1) {\n                setBackEndMessage({\n                    state: 1,\n                    message: \"Purchase success\"\n                });\n            }\n            getProducts()\n          }, (error) => {\n            console.log(\"in error\");\n            console.log(error.response.data);\n            \n            console.log(error.response.data.message);\n            setBackEndMessage({\n                state: 0,\n                message: error.response.data.message\n            });\n            getProducts()\n          }\n        );\n    }\n\n    useEffect(() => {\n        getProducts()\n      }, [])\n    return ( \n        <Container className=\"App\">\n            <Row>\n                <Col>\n                <Header/>\n                </Col>\n            </Row>\n            \n                <Row>\n                    <Col xs={4} md={3}>\n                        <ListContainer offers={offers}/>\n                    </Col>\n                    <Col xs={4} md={5}>\n                        <ResponseBox frontEndMessage={frontEndCheckMessage} setFrontEndMessage={setFrontEndCheckMessage} backEndMessage={backEndMessage} setBackEndMessage={setBackEndMessage}/> \n                         \n                    </Col>\n                    <Col xs={4} md={4}>\n                        <BuyBox \n                            offers={offers}\n                            handleBuy={handleBuy} \n                            setSelectedProduct={setSelectedProduct}\n                            setMd5HashedUrl={setMd5HashedUrl}\n                            setDealPrice={setDealPrice}\n                            setPhoneNumber={setPhoneNumber}                        />\n                    </Col>\n                </Row>\n            \n            \n            \n            \n            {/* <Container id={2}/> */}\n        </Container>\n    );\n}\n \nexport default WindowContainer;","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport WindowContainer from \"./components/WindowContainer\"\nimport \"./App.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<WindowContainer />, document.getElementById(\"root\"))"],"sourceRoot":""}